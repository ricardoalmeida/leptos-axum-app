name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "leptos-axum-e2e"
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-directories: |
            ~/.cargo/bin/cargo-generate
            ~/.cargo/bin/cargo-leptos
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: end2end/package-lock.json

      - name: Cache global npm packages
        uses: actions/cache@v3
        with:
          path: ~/.npm-global
          key: ${{ runner.os }}-npm-global-sass

      - name: Configure npm global path
        run: |
          mkdir -p ~/.npm-global
          npm config set prefix '~/.npm-global'
          echo "~/.npm-global/bin" >> $GITHUB_PATH

      - name: Install Sass
        run: npm install -g sass

      - name: Install Cargo Generate
        run: cargo install cargo-generate --locked

      - name: Install Cargo Leptos
        run: cargo install cargo-leptos@^0.2 --locked

      - name: Install dependencies
        run: cd end2end && npm install

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('end2end/package-lock.json') }}

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: cd end2end && npx playwright install --with-deps

      - name: Run end-to-end tests
        run: cargo leptos end-to-end
